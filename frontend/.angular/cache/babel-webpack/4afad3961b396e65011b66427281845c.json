{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Defines how to improve an image by automatically adjusting image colors, contrast and brightness.</br>\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/image_transformations#image_improvement_effects|Image improvement effects}\n * @memberOf Actions.Adjust\n */\n\nclass ImproveAction extends Action {\n  constructor() {\n    super();\n    this._actionModel = {\n      actionType: 'improve'\n    };\n  }\n  /**\n   *\n   * @description The improve mode.\n   * @param {Qualifiers.ImproveMode | string} value\n   */\n\n\n  mode(value) {\n    this.modeValue = value;\n    this._actionModel.mode = value;\n    return this;\n  }\n  /**\n   * @description How much to blend the improved result with the original image, where 0 means only use the original and 100 means only use the improved result. (Range: 0 to 100, Server default: 100)\n   * @param {number} value\n   */\n\n\n  blend(value) {\n    this.blendValue = value;\n    this._actionModel.blend = value;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const qualifierValue = new QualifierValue(['improve', this.modeValue, this.blendValue]).setDelimiter(':');\n    this.addQualifier(new Qualifier('e', qualifierValue));\n    return this;\n  }\n\n  static fromJson(actionModel) {\n    const {\n      mode,\n      blend\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this();\n    mode && result.mode(mode);\n    blend && result.blend(blend);\n    return result;\n  }\n\n}\n\nexport { ImproveAction };","map":null,"metadata":{},"sourceType":"module"}