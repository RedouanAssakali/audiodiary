{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description A VideoCodec class, this class has no methods, and just sets the codec type (vp9, vp8, etc.)\n * @memberOf Qualifiers.VideoCodec\n */\n\nclass VideoCodecType extends Qualifier {\n  constructor(type) {\n    super('vc');\n    this.addValue(type);\n  }\n\n}\n/**\n * @description An Advanced VideoCodec class with Profile and Level methods\n * @memberOf Qualifiers.VideoCodec\n */\n\n\nclass AdvVideoCodecType extends Qualifier {\n  constructor(type) {\n    super('vc');\n    this._type = type;\n  }\n  /**\n   * @description Specifies the profile to use with the h264 codec.\n   * @param {Qualifiers.VideoCodecProfile | string} profile Sets the profile of the video codec\n   * @example new AdvVideoCodecType('h264').profile(VideoCodecProfile.baseline())\n   * @return this;\n   */\n\n\n  profile(profile) {\n    this._prof = profile;\n    return this;\n  }\n  /**\n   * @description Specifies the level to use with the h264 codec and specified profile.\n   * @param {Qualifiers.VideoCodecLevel | number | string} lvl\n   * @example new AdvVideoCodecType('h264').profile(VideoCodecLevel.baseline())\n   * @return this;\n   */\n\n\n  level(lvl) {\n    this._lvl = lvl;\n    return this;\n  }\n  /**\n   * @description returns a toString representation of this qualifier\n   * @return string;\n   */\n\n\n  toString() {\n    return `vc_${this._type}:${this._prof}:${this._lvl}`;\n  }\n\n}\n\nexport { VideoCodecType, AdvVideoCodecType };","map":null,"metadata":{},"sourceType":"module"}