{"ast":null,"code":"/**\n * @description Contains functions to select the type of color-blind condition to simulate.\n * <b>Learn more</b>: {@link https://cloudinary.com/blog/open_your_eyes_to_color_accessibility|Blog: Open your Eyes to Color Accessibility}\n * @memberOf Qualifiers\n * @namespace SimulateColorBlindValues\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction deuteranopia() {\n  return 'deuteranopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction protanopia() {\n  return 'protanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction tritanopia() {\n  return 'tritanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction tritanomaly() {\n  return 'tritanomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction deuteranomaly() {\n  return 'deuteranomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction coneMonochromacy() {\n  return 'cone_monochromacy';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction rodMonochromacy() {\n  return 'rod_monochromacy';\n}\n\nconst SimulateColorBlind = {\n  coneMonochromacy,\n  deuteranomaly,\n  deuteranopia,\n  protanopia,\n  rodMonochromacy,\n  tritanomaly,\n  tritanopia\n};\nexport { SimulateColorBlind, coneMonochromacy, deuteranomaly, deuteranopia, protanopia, rodMonochromacy, tritanomaly, tritanopia };","map":null,"metadata":{},"sourceType":"module"}