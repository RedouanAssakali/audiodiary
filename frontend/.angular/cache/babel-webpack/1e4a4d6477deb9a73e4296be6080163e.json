{"ast":null,"code":"import _asyncToGenerator from \"/Users/hannatoenbreker/IdeaProjects/ad-vmc-1/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Chart from 'chart.js/auto';\nimport { User } from \"../../../models/user\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/posts.service\";\nimport * as i2 from \"../../../services/user.service\";\nimport * as i3 from \"../../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction AdminUsersComponent_div_6_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelementStart(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AdminUsersComponent_div_6_tr_12_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.deleteUser(user_r2.email);\n    });\n    i0.ɵɵtext(9, \"Remove user\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.name);\n  }\n}\n\nfunction AdminUsersComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"table\", 7);\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelementStart(4, \"th\", 8);\n    i0.ɵɵtext(5, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 8);\n    i0.ɵɵtext(7, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 8);\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"th\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, AdminUsersComponent_div_6_tr_12_Template, 10, 3, \"tr\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.users);\n  }\n}\n\nexport let AdminUsersComponent = /*#__PURE__*/(() => {\n  class AdminUsersComponent {\n    constructor(postsService, userService, authService) {\n      this.postsService = postsService;\n      this.userService = userService;\n      this.authService = authService;\n      this.currentAdmin = new User();\n    }\n\n    ngOnInit() {\n      this.checkAdminOrResearch();\n      this.getUsers();\n      this.loadPageData();\n    }\n\n    loadThemes() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.postsService.getTopFiveThemes().then(result => {\n          _this.popularPosts = result;\n          console.log(_this.popularPosts);\n        });\n      })();\n    }\n\n    loadPageData() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this2.loadThemes(); ///const ctx = document.getElementById('account');\n\n        const ctx2 = document.getElementById('age'); // @ts-ignore\n        // const myChart = new Chart(ctx, {\n        //   type: 'bar',\n        //   data: {\n        //     labels: ['User with account', 'User without account'],\n        //     datasets: [{\n        //       label: 'User type',\n        //       data: [8203, 786],\n        //       backgroundColor: [\n        //         'rgba(255, 99, 132, 0.2)',\n        //         'rgba(255, 99, 132, 0.2)',\n        //       ],\n        //       borderColor: [\n        //         'rgba(255, 99, 132, 1)',\n        //         'rgba(255, 99, 132, 1)',\n        //       ],\n        //       borderWidth: 1\n        //     }\n        //     ]\n        //   },\n        //   options: {\n        //     scales: {\n        //       y: {\n        //         beginAtZero: true\n        //       }\n        //     }\n        //   }\n        // });\n        // @ts-ignore\n\n        const myChart2 = new Chart(ctx2, {\n          type: 'doughnut',\n          data: {\n            // @ts-ignore\n            labels: [_this2.popularPosts[0][0], _this2.popularPosts[1][0], _this2.popularPosts[2][0], _this2.popularPosts[3][0], _this2.popularPosts[4][0]],\n            datasets: [{\n              label: 'User type',\n              // @ts-ignore\n              data: [_this2.popularPosts[0][1], _this2.popularPosts[1][1], _this2.popularPosts[2][1], _this2.popularPosts[3][1], _this2.popularPosts[4][1]],\n              backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgb(100, 180, 2)', 'rgb(255, 130, 10)']\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      })();\n    }\n\n    getUsers() {\n      this.userService.getUsers().pipe().subscribe(data => {\n        this.users = data;\n      });\n    }\n\n    deleteUser(email) {\n      this.userService.restGetUser(email).pipe().subscribe(data => {\n        this.userService.delete(data).subscribe(data => {\n          for (let i = 0; i < this.users.length; i++) {\n            if (this.users[i].email == email) {\n              this.users.splice(this.posts.indexOf(this.posts[i]), 1);\n            }\n          }\n\n          console.log(data);\n        }, error => console.log(error));\n      });\n    }\n\n    updateUser(email) {\n      this.userService.restGetUser(email).pipe().subscribe(data => {\n        this.userService.updateUser(data);\n      });\n    }\n\n    checkAdminOrResearch() {\n      let user = this.userService.restGetUser(this.authService.getUser().email);\n      user.pipe().subscribe(data => {\n        this.currentAdmin = data;\n        console.log(this.currentAdmin.verified);\n      });\n    }\n\n  }\n\n  AdminUsersComponent.ɵfac = function AdminUsersComponent_Factory(t) {\n    return new (t || AdminUsersComponent)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  AdminUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminUsersComponent,\n    selectors: [[\"app-admin-users\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"card-deck\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"id\", \"age\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"table-responsive\"], [\"id\", \"table\", 1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn-primary\", 3, \"click\"]],\n    template: function AdminUsersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3, \" Popular theme \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelement(5, \"canvas\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, AdminUsersComponent_div_6_Template, 13, 1, \"div\", 5);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentAdmin.verified);\n      }\n    },\n    directives: [i4.NgIf, i4.NgForOf],\n    styles: [\"\"]\n  });\n  return AdminUsersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}