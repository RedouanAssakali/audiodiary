{"ast":null,"code":"import { Post } from \"../../models/post\";\nimport { Cloudinary } from \"@cloudinary/url-gen\";\nimport { fill } from '@cloudinary/url-gen/actions/resize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@cloudinary/ng\";\nimport * as i6 from \"@angular/forms\";\nexport let EditingComponent = /*#__PURE__*/(() => {\n  class EditingComponent {\n    constructor(postService, route, auth, zone, http) {\n      this.postService = postService;\n      this.route = route;\n      this.auth = auth;\n      this.zone = zone;\n      this.http = http;\n      this.newPost = new Post();\n      this.editTitle = 'card title';\n      this.editDescription = 'here comes the description';\n      this.cardColor = '#FE5F38';\n      this.hasBaseDropZoneOver = false;\n      this.responses = [];\n    }\n\n    eventListen() {\n      const url = \"https://api.cloudinary.com/v1_1/hogeschool-van-amsterdam/upload\";\n      const form = document.querySelector(\"form\"); // @ts-ignore\n\n      const files = document.querySelector(\"[type=file]\").files;\n      const formData = new FormData();\n\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i];\n        formData.append(\"file\", file);\n        formData.append(\"upload_preset\", \"ml_default\");\n        fetch(url, {\n          method: \"POST\",\n          body: formData\n        }).then(response => {\n          return response.text();\n        }).then(data => {\n          document.getElementById(\"data\").innerHTML += data;\n        });\n      }\n    }\n\n    ngOnInit() {\n      // this.loadCloudinary();\n      // mapboxgl.accessToken = 'pk.eyJ1IjoiaGFubmF0b2VuYnJla2VyIiwiYSI6ImNrdXdzMjNhdTF6cHAydmxuenY3ODQ3djkifQ.X7LsiDBkUfz7vn7LfkUvKQ';\n      // this.map = new mapboxgl.Map({\n      //   style: 'mapbox://styles/mapbox/outdoors-v11',\n      //   center: [4.897070, 50.877956],\n      //   zoom: 5.5,\n      //   container: 'map-mapbox',\n      // });\n      //\n      // const nav = new mapboxgl.NavigationControl();\n      // this.map.addControl(nav, 'top-left');\n      //\n      // this.map.addControl(\n      //   new MapboxGeocoder({\n      //     accessToken: 'pk.eyJ1IjoiaGFubmF0b2VuYnJla2VyIiwiYSI6ImNrdXdzMjNhdTF6cHAydmxuenY3ODQ3djkifQ.X7LsiDBkUfz7vn7LfkUvKQ',\n      //     mapboxgl: mapboxgl\n      //   })\n      // );\n      //\n      // this.map.addControl(\n      //   new mapboxgl.GeolocateControl({\n      //     positionOptions: {\n      //       enableHighAccuracy: true\n      //     },\n      //     // When active the map will receive updates to the device's location as it changes.\n      //     trackUserLocation: true,\n      //     // Draw an arrow next to the location dot to indicate which direction the device is heading.\n      //     showUserHeading: true\n      //   })\n      // );\n      //\n      // let marker: any = null;\n      // this.map.on('click', (e: any) => {\n      //     // `e.lngLat` is the longitude, latitude geographical position of the event.\n      //   console.log(e.lngLat);\n      //   console.log(e.lngLat.lat);\n      //   console.log(e.lngLat.lng);\n      //     if (marker != null) {\n      //       // @ts-ignore\n      //       marker.remove()\n      //     }\n      //   marker = new mapboxgl.Marker()\n      //     .setLngLat(e.lngLat.wrap())\n      //     .addTo(this.map);\n      // });\n      // 2. Set your cloud name\n      //========================\n      // Create a Cloudinary instance and set your cloud name.\n      const cld = new Cloudinary({\n        cloud: {\n          cloudName: 'hogeschool-van-amsterdam'\n        }\n      }); // 3. Get your image\n      //===================\n      // Instantiate a CloudinaryImage object for the image with the public ID, 'docs/models'.\n\n      this.img = cld.image('sample.jpg'); // 4. Transform your image\n      //=========================\n      // Resize to 250 x 250 pixels using the 'fill' crop mode.\n\n      this.img.resize(fill().width(250).height(250)); // newly added\n\n      const uploaderOptions = {};\n    }\n\n  }\n\n  EditingComponent.ɵfac = function EditingComponent_Factory(t) {\n    return new (t || EditingComponent)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i4.HttpClient));\n  };\n\n  EditingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditingComponent,\n    selectors: [[\"app-editing\"]],\n    inputs: {\n      responses: \"responses\"\n    },\n    decls: 7,\n    vars: 1,\n    consts: [[3, \"cldImg\"], [\"method\", \"post\", \"enctype\", \"multipart/form-data\"], [\"type\", \"file\", \"name\", \"files[]\", \"multiple\", \"\"], [\"type\", \"submit\", \"value\", \"Upload Files\", \"name\", \"submit\", 3, \"click\"], [\"id\", \"data\"]],\n    template: function EditingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"advanced-image\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵelementStart(3, \"input\", 3);\n        i0.ɵɵlistener(\"click\", function EditingComponent_Template_input_click_3_listener() {\n          return ctx.eventListen();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"p\", 4);\n        i0.ɵɵelementStart(5, \"h2\");\n        i0.ɵɵtext(6, \"Status\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"cldImg\", ctx.img);\n      }\n    },\n    directives: [i5.CloudinaryImageComponent, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm],\n    styles: [\".editingRec[_ngcontent-%COMP%]{border-radius:34px}.card[_ngcontent-%COMP%]{margin:10px auto;border-radius:20px 20px 30px 30px;color:#000;width:350px;box-shadow:2.4px 4.8px 4.8px;float:none;display:flex;flex:1 1 auto}.cardImg[_ngcontent-%COMP%]{border-radius:17px 17px 30px 30px}.card-username[_ngcontent-%COMP%]{font-size:12px;margin-bottom:10px;display:inline-block}.postCardTitle[_ngcontent-%COMP%]{margin-bottom:0}.card-body[_ngcontent-%COMP%]{padding-top:0}.icons[_ngcontent-%COMP%]{display:inline-block;float:right}.inputHeader[_ngcontent-%COMP%]{font-weight:700;margin:1% 3% 4% 4%;width:23%}.editingRec[_ngcontent-%COMP%]{border-radius:34px;margin-bottom:10px;padding-bottom:17px}h2#editHeader[_ngcontent-%COMP%]{text-align:center}.postCard[_ngcontent-%COMP%]{width:350px;height:230px;margin:10px auto;float:none;border-radius:21px;display:flex;flex:1 1 auto;box-shadow:0 3px 6px #000}.editCardImg[_ngcontent-%COMP%]{width:100%;height:70%;border-radius:17px}.card-img-top[_ngcontent-%COMP%]{width:182px;height:125px;margin-top:20px;margin-left:20px;border-radius:17px}.title-container[_ngcontent-%COMP%]{width:130px;height:21px;border-radius:7px;background:#94260d}.card-title[_ngcontent-%COMP%]{font-size:15px;color:#fff;margin-left:10px}.text-container[_ngcontent-%COMP%]{width:130px;height:90px;margin-top:2px;border-radius:7px;background:white;overflow:initial}.card-text[_ngcontent-%COMP%]{margin-top:1px;margin-left:2px;font-size:10px;color:#000}.bi[_ngcontent-%COMP%]{padding:3px}.bi-flag-fill[_ngcontent-%COMP%]{margin-left:36px}h2[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{font-size:2rem;padding-top:20px}.inputHeader[_ngcontent-%COMP%]{font-size:130%;margin:1% 3% 4% 4%;width:23%}.inputValue[_ngcontent-%COMP%]{width:80%;height:40px;margin:1% 1% 1% 7%;box-shadow:2px 2px 10px #000}.addLocationIcon[_ngcontent-%COMP%]{height:36px}#locationInput[_ngcontent-%COMP%]{border-radius:6px;text-align:center;background:url(location_icon.png) no-repeat scroll 97% -1px;background-size:35px}#descriptionArea[_ngcontent-%COMP%]{height:100px}#durationInput[_ngcontent-%COMP%]{border-radius:6px;text-align:center}#descriptionInput[_ngcontent-%COMP%]{width:340px}.picture[_ngcontent-%COMP%]{display:flex}.addPictureIcon[_ngcontent-%COMP%]{height:40px}#themeInput[_ngcontent-%COMP%]{font-size:115%;margin:2% -9% 3% 4%;width:35%}.themeSelection[_ngcontent-%COMP%]{display:flex}#chooseTheme[_ngcontent-%COMP%]{display:flex;margin-top:5%;margin-left:10%}.themeOptions[_ngcontent-%COMP%]{margin-right:6px;width:24px;height:24px;box-shadow:2px 4px #000}#option1[_ngcontent-%COMP%]{background:#FE5F38}#option2[_ngcontent-%COMP%]{background:#FFAA5B}#option3[_ngcontent-%COMP%]{background:#9BC111}#option4[_ngcontent-%COMP%]{background:#7A9BC6}#option5[_ngcontent-%COMP%]{background:#A28EB2}#option6[_ngcontent-%COMP%]{background:#73251E}.editButtons[_ngcontent-%COMP%]{width:96px;height:36px;margin-left:15%;border-radius:15px;border-width:0;box-shadow:2px 2px 10px #000}#discardButton[_ngcontent-%COMP%]{background-color:gray}\"]\n  });\n  return EditingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}