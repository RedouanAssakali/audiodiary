{"ast":null,"code":"'use strict';\n\nvar split = require('browser-split');\n\nvar classIdSplit = /([\\.#]?[a-zA-Z0-9\\u007F-\\uFFFF_:-]+)/;\nvar notClassId = /^\\.|#/;\nmodule.exports = parseTag;\n\nfunction parseTag(tag, props) {\n  if (!tag) {\n    return 'DIV';\n  }\n\n  var noId = !props.hasOwnProperty('id');\n  var tagParts = split(tag, classIdSplit);\n  var tagName = null;\n\n  if (notClassId.test(tagParts[1])) {\n    tagName = 'DIV';\n  }\n\n  var classes, part, type, i;\n\n  for (i = 0; i < tagParts.length; i++) {\n    part = tagParts[i];\n\n    if (!part) {\n      continue;\n    }\n\n    type = part.charAt(0);\n\n    if (!tagName) {\n      tagName = part;\n    } else if (type === '.') {\n      classes = classes || [];\n      classes.push(part.substring(1, part.length));\n    } else if (type === '#' && noId) {\n      props.id = part.substring(1, part.length);\n    }\n  }\n\n  if (classes) {\n    if (props.className) {\n      classes.push(props.className);\n    }\n\n    props.className = classes.join(' ');\n  }\n\n  return props.namespace ? tagName : tagName.toUpperCase();\n}","map":null,"metadata":{},"sourceType":"script"}