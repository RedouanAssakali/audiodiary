{"ast":null,"code":"import { secondsToPixels, pixelsToSeconds } from \"../utils/conversions\";\n/*\n * virtual-dom hook for scrolling the track container.\n */\n\nexport default class {\n  constructor(playlist) {\n    this.playlist = playlist;\n  }\n\n  hook(node) {\n    const playlist = this.playlist;\n\n    if (!playlist.isScrolling) {\n      const el = node;\n\n      if (playlist.isAutomaticScroll) {\n        const rect = node.getBoundingClientRect();\n        const controlWidth = playlist.controls.show ? playlist.controls.width : 0;\n        const width = pixelsToSeconds(rect.width - controlWidth, playlist.samplesPerPixel, playlist.sampleRate);\n        const timePoint = playlist.isPlaying() ? playlist.playbackSeconds : playlist.getTimeSelection().start;\n\n        if (timePoint < playlist.scrollLeft || timePoint >= playlist.scrollLeft + width) {\n          playlist.scrollLeft = Math.min(timePoint, playlist.duration - width);\n        }\n      }\n\n      const left = secondsToPixels(playlist.scrollLeft, playlist.samplesPerPixel, playlist.sampleRate);\n      el.scrollLeft = left;\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}