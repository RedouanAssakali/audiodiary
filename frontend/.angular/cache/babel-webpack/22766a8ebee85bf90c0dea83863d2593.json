{"ast":null,"code":"import { QualifierValue } from \"../internal/qualifier/QualifierValue.js\";\n/**\n * @summary qualifier\n * @namespace AutoFocus\n * @memberOf Qualifiers\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\n\n/**\n * @memberOf Qualifiers.AutoFocus\n * @extends {SDK.QualifierValue}\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\n\nclass AutoFocus extends QualifierValue {\n  constructor(focusOn, weight) {\n    super();\n    this._weight = weight;\n    this.focusOn = focusOn;\n    this.shouldAvoid = false;\n  }\n  /**\n   * @summary qualifier\n   * @description Specifies the object to focus on automatically\n   * Accepts an AutoFocusObject (which is just a wrapper for a FocusOn object, but with extra method: avoid, weight)\n   * @param {Qualifiers.FocusOn} obj The object to focus on.\n   * @param {number} weight\n   */\n\n\n  static focusOn(obj, weight) {\n    return new AutoFocus(obj, weight);\n  }\n\n  shouldAddWeight() {\n    return typeof this._weight === 'number' || typeof this._weight === 'string' || this.shouldAvoid;\n  }\n  /**\n   * @summary qualifier\n   * @desc Get the name of the of the object\n   */\n\n\n  getName() {\n    return this.focusOn.name;\n  }\n  /**\n   * @summary qualifier\n   * @desc Get the weight for the object\n   */\n\n\n  getWeight() {\n    if (this.shouldAvoid) {\n      return 'avoid';\n    } else {\n      return this._weight;\n    }\n  }\n  /**\n   * @summary qualifier\n   * @desc Return the string representation of this QualifierValue\n   */\n\n\n  toString() {\n    // Future proofing, in case we'd like to support some custom string in the future, or if data is coming from a DB\n    if (this.shouldAddWeight()) {\n      return `${this.getName()}_${this.getWeight()}`;\n    } else {\n      return `${this.getName()}`;\n    }\n  }\n  /**\n   * @summary qualifier\n   * @description Sets the importance level of the object within the automatic gravity algorithm\n   * @param {numebr} w The focus weight for the object\n   * @return {this}\n   */\n\n\n  weight(w) {\n    this._weight = w;\n    return this;\n  }\n  /**\n   * @summary qualifier\n   * @description Attempts to avoid the detected object in the image\n   * @return {this}\n   */\n\n\n  avoid() {\n    this.shouldAvoid = true;\n    return this;\n  }\n\n}\n\nexport { AutoFocus };","map":null,"metadata":{},"sourceType":"module"}