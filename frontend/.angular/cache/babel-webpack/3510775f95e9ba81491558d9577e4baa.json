{"ast":null,"code":"import Loader from \"./Loader\";\nexport default class extends Loader {\n  /**\n   * Loads an audio file via XHR.\n   */\n  load() {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", this.src, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.send();\n      xhr.addEventListener(\"progress\", e => {\n        super.fileProgress(e);\n      });\n      xhr.addEventListener(\"load\", e => {\n        const decoderPromise = super.fileLoad(e);\n        decoderPromise.then(audioBuffer => {\n          resolve(audioBuffer);\n        }).catch(reject);\n      });\n      xhr.addEventListener(\"error\", () => {\n        reject(Error(`Track ${this.src} failed to load`));\n      });\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}