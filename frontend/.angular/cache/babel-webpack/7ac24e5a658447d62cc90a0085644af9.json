{"ast":null,"code":"import { Background } from \"../../qualifiers.js\";\nimport { auto, border, borderGradient, color, predominant, predominantGradient } from \"../../qualifiers/background.js\";\n/**\n * Create BackgroundQualifier from IBlurredBackgroundModel\n * @param backgroundModel\n */\n\nfunction createBlurredBackground(backgroundModel) {\n  const {\n    brightness,\n    intensity\n  } = backgroundModel;\n  const result = Background.blurred();\n\n  if (brightness || brightness == 0) {\n    result.brightness(brightness);\n  }\n\n  if (intensity || intensity == 0) {\n    result.intensity(intensity);\n  }\n\n  return result;\n}\n/**\n * Create a gradientBackground from given model\n * @param background\n * @param backgroundModel\n */\n\n\nfunction createGradientBackground(background, backgroundModel) {\n  const {\n    gradientColors,\n    gradientDirection,\n    contrast,\n    palette\n  } = backgroundModel;\n\n  if (contrast) {\n    background.contrast();\n  }\n\n  if (palette) {\n    background.palette(...palette);\n  }\n\n  if (gradientColors) {\n    background.gradientColors(+gradientColors);\n  }\n\n  if (gradientDirection) {\n    background.gradientDirection(gradientDirection);\n  }\n\n  return background;\n}\n/**\n * Crete a background with contrast and palette from given model\n * @param background\n * @param backgroundModel\n */\n\n\nfunction createContrastPaletteBackground(background, backgroundModel) {\n  const {\n    contrast,\n    palette\n  } = backgroundModel;\n\n  if (contrast) {\n    background.contrast();\n  }\n\n  if (palette) {\n    background.palette(...palette);\n  }\n\n  return background;\n}\n/**\n * Create BackgroundQualifier from IBackgroundModel\n * @param backgroundModel\n */\n\n\nfunction createBackgroundFromModel(backgroundModel) {\n  const {\n    backgroundType\n  } = backgroundModel;\n\n  switch (backgroundType) {\n    case 'auto':\n      return auto();\n\n    case 'blurred':\n      return createBlurredBackground(backgroundModel);\n\n    case 'border':\n      return createContrastPaletteBackground(border(), backgroundModel);\n\n    case 'borderGradient':\n      return createGradientBackground(borderGradient(), backgroundModel);\n\n    case 'predominant':\n      return createContrastPaletteBackground(predominant(), backgroundModel);\n\n    case 'predominantGradient':\n      return createGradientBackground(predominantGradient(), backgroundModel);\n\n    default:\n      return color(backgroundModel.color);\n  }\n}\n\nexport { createBackgroundFromModel };","map":null,"metadata":{},"sourceType":"module"}