{"ast":null,"code":"/*\n * virtual-dom hook for rendering the time scale canvas.\n */\nexport default class {\n  constructor(tickInfo, offset, samplesPerPixel, duration, colors) {\n    this.tickInfo = tickInfo;\n    this.offset = offset;\n    this.samplesPerPixel = samplesPerPixel;\n    this.duration = duration;\n    this.colors = colors;\n  }\n\n  hook(canvas, prop, prev) {\n    // canvas is up to date\n    if (prev !== undefined && prev.offset === this.offset && prev.duration === this.duration && prev.samplesPerPixel === this.samplesPerPixel) {\n      return;\n    }\n\n    const width = canvas.width;\n    const height = canvas.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = this.colors.timeColor;\n    Object.keys(this.tickInfo).forEach(x => {\n      const scaleHeight = this.tickInfo[x];\n      const scaleY = height - scaleHeight;\n      ctx.fillRect(x, scaleY, 1, scaleHeight);\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}