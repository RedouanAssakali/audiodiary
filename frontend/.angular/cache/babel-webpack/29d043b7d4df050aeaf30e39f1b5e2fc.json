{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FADEOUT = exports.FADEIN = exports.LOGARITHMIC = exports.EXPONENTIAL = exports.LINEAR = exports.SCURVE = undefined;\nexports.createFadeIn = createFadeIn;\nexports.createFadeOut = createFadeOut;\n\nvar _fadeCurves = require('fade-curves');\n\nvar SCURVE = exports.SCURVE = \"sCurve\";\nvar LINEAR = exports.LINEAR = \"linear\";\nvar EXPONENTIAL = exports.EXPONENTIAL = \"exponential\";\nvar LOGARITHMIC = exports.LOGARITHMIC = \"logarithmic\";\nvar FADEIN = exports.FADEIN = \"FadeIn\";\nvar FADEOUT = exports.FADEOUT = \"FadeOut\";\n\nfunction sCurveFadeIn(start, duration) {\n  var curve = (0, _fadeCurves.sCurve)(10000, 1);\n  this.setValueCurveAtTime(curve, start, duration);\n}\n\nfunction sCurveFadeOut(start, duration) {\n  var curve = (0, _fadeCurves.sCurve)(10000, -1);\n  this.setValueCurveAtTime(curve, start, duration);\n}\n\nfunction linearFadeIn(start, duration) {\n  this.linearRampToValueAtTime(0, start);\n  this.linearRampToValueAtTime(1, start + duration);\n}\n\nfunction linearFadeOut(start, duration) {\n  this.linearRampToValueAtTime(1, start);\n  this.linearRampToValueAtTime(0, start + duration);\n}\n\nfunction exponentialFadeIn(start, duration) {\n  this.exponentialRampToValueAtTime(0.01, start);\n  this.exponentialRampToValueAtTime(1, start + duration);\n}\n\nfunction exponentialFadeOut(start, duration) {\n  this.exponentialRampToValueAtTime(1, start);\n  this.exponentialRampToValueAtTime(0.01, start + duration);\n}\n\nfunction logarithmicFadeIn(start, duration) {\n  var curve = (0, _fadeCurves.logarithmic)(10000, 10, 1);\n  this.setValueCurveAtTime(curve, start, duration);\n}\n\nfunction logarithmicFadeOut(start, duration) {\n  var curve = (0, _fadeCurves.logarithmic)(10000, 10, -1);\n  this.setValueCurveAtTime(curve, start, duration);\n}\n\nfunction createFadeIn(gain, shape, start, duration) {\n  switch (shape) {\n    case SCURVE:\n      sCurveFadeIn.call(gain, start, duration);\n      break;\n\n    case LINEAR:\n      linearFadeIn.call(gain, start, duration);\n      break;\n\n    case EXPONENTIAL:\n      exponentialFadeIn.call(gain, start, duration);\n      break;\n\n    case LOGARITHMIC:\n      logarithmicFadeIn.call(gain, start, duration);\n      break;\n\n    default:\n      throw new Error(\"Unsupported Fade type\");\n  }\n}\n\nfunction createFadeOut(gain, shape, start, duration) {\n  switch (shape) {\n    case SCURVE:\n      sCurveFadeOut.call(gain, start, duration);\n      break;\n\n    case LINEAR:\n      linearFadeOut.call(gain, start, duration);\n      break;\n\n    case EXPONENTIAL:\n      exponentialFadeOut.call(gain, start, duration);\n      break;\n\n    case LOGARITHMIC:\n      logarithmicFadeOut.call(gain, start, duration);\n      break;\n\n    default:\n      throw new Error(\"Unsupported Fade type\");\n  }\n}","map":null,"metadata":{},"sourceType":"script"}