{"ast":null,"code":"import { stringPad } from \"./stringPad.js\";\n/**\n * @private\n * @description Reverses the version positions, x.y.z turns to z.y.x\n *              Pads each segment with '0' so they have length of 2\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\n\nexport function reverseVersion(semVer) {\n  if (semVer.split('.').length < 2) {\n    throw new Error('invalid semVer, must have at least two segments');\n  } // Split by '.', reverse, create new array with padded values and concat it together\n\n\n  return semVer.split('.').reverse().map(segment => {\n    // try to cast to number\n    const asNumber = +segment;\n\n    if (isNaN(asNumber) || asNumber < 0) {\n      throw 'Invalid version number provided';\n    }\n\n    return stringPad(segment, 2, '0');\n  }).join('.');\n}","map":null,"metadata":{},"sourceType":"module"}