{"ast":null,"code":"/**\n * @memberOf Qualifiers.Source\n * @description An abstract class extended by all Source objects\n */\nclass BaseSource {\n  /**\n   * @description Utility function to encode an asset publicID in an overlay\n   * @protected\n   * @example\n   * encodeAssetPublicID('foo/bar'); // -> foo:bar\n   */\n  encodeAssetPublicID(publicID) {\n    return publicID.replace(/\\//g, ':');\n  }\n  /**\n   * @description\n   * Apply a transformation on the image source of the layer\n   * @param {SDK.ImageTransformation} t An image transformation to apply to the layer\n   * @returns {this}\n   */\n\n\n  transformation(t) {\n    this._transformation = t;\n    return this;\n  }\n  /**\n   * @description Returns the Transformation of the source\n   * @return {SDK.Transformation}\n   */\n\n\n  getTransformation() {\n    return this._transformation;\n  }\n\n}\n\nexport { BaseSource };","map":null,"metadata":{},"sourceType":"module"}