{"ast":null,"code":"var document = require(\"global/document\");\n\nvar applyProperties = require(\"./apply-properties\");\n\nvar isVNode = require(\"../vnode/is-vnode.js\");\n\nvar isVText = require(\"../vnode/is-vtext.js\");\n\nvar isWidget = require(\"../vnode/is-widget.js\");\n\nvar handleThunk = require(\"../vnode/handle-thunk.js\");\n\nmodule.exports = createElement;\n\nfunction createElement(vnode, opts) {\n  var doc = opts ? opts.document || document : document;\n  var warn = opts ? opts.warn : null;\n  vnode = handleThunk(vnode).a;\n\n  if (isWidget(vnode)) {\n    return vnode.init();\n  } else if (isVText(vnode)) {\n    return doc.createTextNode(vnode.text);\n  } else if (!isVNode(vnode)) {\n    if (warn) {\n      warn(\"Item is not a valid virtual dom node\", vnode);\n    }\n\n    return null;\n  }\n\n  var node = vnode.namespace === null ? doc.createElement(vnode.tagName) : doc.createElementNS(vnode.namespace, vnode.tagName);\n  var props = vnode.properties;\n  applyProperties(node, props);\n  var children = vnode.children;\n\n  for (var i = 0; i < children.length; i++) {\n    var childNode = createElement(children[i], opts);\n\n    if (childNode) {\n      node.appendChild(childNode);\n    }\n  }\n\n  return node;\n}","map":null,"metadata":{},"sourceType":"script"}