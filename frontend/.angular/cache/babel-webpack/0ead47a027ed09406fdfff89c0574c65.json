{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ColorSpace } from \"../../qualifiers/colorSpace.js\";\nimport { COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP, COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Specifies the color space to use.\n * @memberOf Actions.Delivery\n * @extends SDK.Action\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\n\nclass DeliveryColorSpaceAction extends Action {\n  /**\n   * Create a new DeliveryColorSpaceAction\n   * @param mode\n   */\n  constructor(mode) {\n    super();\n    this._actionModel = {};\n    this._actionModel = {\n      actionType: 'colorSpace',\n      mode: COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP[mode] || mode\n    };\n    this.addQualifier(new Qualifier('cs', ColorSpace[mode] ? ColorSpace[mode]() : mode));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      mode\n    } = actionModel;\n    const colorSpaceMode = COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP[mode] || mode; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    return new this(colorSpaceMode);\n  }\n\n}\n\nexport { DeliveryColorSpaceAction };","map":null,"metadata":{},"sourceType":"module"}