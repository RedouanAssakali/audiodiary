{"ast":null,"code":"import { pixelsToSeconds } from \"../utils/conversions\";\nexport default class {\n  constructor(playlist, data = {}) {\n    this.playlist = playlist;\n    this.data = data;\n    this.active = false;\n\n    this.ondragover = e => {\n      if (this.active) {\n        e.preventDefault();\n        this.emitDrag(e.clientX);\n      }\n    };\n  }\n\n  emitDrag(x) {\n    const deltaX = x - this.prevX; // emit shift event if not 0\n\n    if (deltaX) {\n      const deltaTime = pixelsToSeconds(deltaX, this.playlist.samplesPerPixel, this.playlist.sampleRate);\n      this.prevX = x;\n      this.playlist.ee.emit(\"dragged\", deltaTime, this.data);\n    }\n  }\n\n  complete() {\n    this.active = false;\n    document.removeEventListener(\"dragover\", this.ondragover);\n  }\n\n  dragstart(e) {\n    const ev = e;\n    this.active = true;\n    this.prevX = e.clientX;\n    ev.dataTransfer.dropEffect = \"move\";\n    ev.dataTransfer.effectAllowed = \"move\";\n    ev.dataTransfer.setData(\"text/plain\", \"\");\n    document.addEventListener(\"dragover\", this.ondragover);\n  }\n\n  dragend(e) {\n    if (this.active) {\n      e.preventDefault();\n      this.complete();\n    }\n  }\n\n  static getClass() {\n    return \".shift\";\n  }\n\n  static getEvents() {\n    return [\"dragstart\", \"dragend\"];\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}