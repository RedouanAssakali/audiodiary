{"ast":null,"code":"import { legacyNormalizeExpression } from \"../utils/legacyNormalizeExpression.js\";\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} _radius The radius to parse\n * @return {string} radius transformation string\n */\n\nexport function processRadius(_radius) {\n  let radius = _radius;\n\n  if (!radius) {\n    return radius;\n  }\n\n  if (!Array.isArray(radius)) {\n    radius = [radius];\n  }\n\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n\n  if (radius.findIndex(x => x === null) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n\n  return radius.map(legacyNormalizeExpression).join(':');\n}","map":null,"metadata":{},"sourceType":"module"}