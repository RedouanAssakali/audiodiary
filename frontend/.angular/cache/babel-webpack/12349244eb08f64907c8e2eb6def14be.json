{"ast":null,"code":"/**\n * @private\n * @description Adds left padding to a string with the desired substring the provided number of times\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\n * @param {string} value\n * @param {number} _targetLength\n * @param {string} _padString\n */\nexport function stringPad(value, _targetLength, _padString) {\n  let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\n\n  let padString = String(typeof _padString !== 'undefined' ? _padString : ' ');\n\n  if (value.length > targetLength) {\n    return String(value);\n  } else {\n    targetLength = targetLength - value.length;\n\n    if (targetLength > padString.length) {\n      padString += repeatStringNumTimes(padString, targetLength / padString.length);\n    }\n\n    return padString.slice(0, targetLength) + String(value);\n  }\n}\n/**\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\n * @param string\n * @param _times\n */\n\nfunction repeatStringNumTimes(string, _times) {\n  let times = _times;\n  let repeatedString = \"\";\n\n  while (times > 0) {\n    repeatedString += string;\n    times--;\n  }\n\n  return repeatedString;\n}","map":null,"metadata":{},"sourceType":"module"}