{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\n * @extends SDK.Action\n * @memberOf {Actions.Effect}\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass ThemeEffect extends Action {\n  constructor(color) {\n    super();\n    this.effectName = 'theme';\n    this.color = color;\n  }\n  /**\n   * @description The sensitivity to photographic elements of an image.\n   *              A value of 0 treats the whole image as non-photographic.\n   *              A value of 200 treats the whole image as photographic, so no theme change is applied.\n   * @param {number} photosensitivity\n   * @return {this}\n   */\n\n\n  photosensitivity(photosensitivity) {\n    this._photosensitivity = photosensitivity;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const sensitivity = this._photosensitivity ? `:photosensitivity_${this._photosensitivity}` : ''; // Replace # in hex colors (#fff -> fff)\n\n    const val = `${this.effectName}:color_${this.color.replace('#', '')}${sensitivity}`;\n    this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n    return;\n  }\n\n}\n\nexport { ThemeEffect };","map":null,"metadata":{},"sourceType":"module"}