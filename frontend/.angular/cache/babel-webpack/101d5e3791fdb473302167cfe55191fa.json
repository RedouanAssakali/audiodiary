{"ast":null,"code":"var isObject = require(\"is-object\");\n\nvar isHook = require(\"../vnode/is-vhook\");\n\nmodule.exports = diffProps;\n\nfunction diffProps(a, b) {\n  var diff;\n\n  for (var aKey in a) {\n    if (!(aKey in b)) {\n      diff = diff || {};\n      diff[aKey] = undefined;\n    }\n\n    var aValue = a[aKey];\n    var bValue = b[aKey];\n\n    if (aValue === bValue) {\n      continue;\n    } else if (isObject(aValue) && isObject(bValue)) {\n      if (getPrototype(bValue) !== getPrototype(aValue)) {\n        diff = diff || {};\n        diff[aKey] = bValue;\n      } else if (isHook(bValue)) {\n        diff = diff || {};\n        diff[aKey] = bValue;\n      } else {\n        var objectDiff = diffProps(aValue, bValue);\n\n        if (objectDiff) {\n          diff = diff || {};\n          diff[aKey] = objectDiff;\n        }\n      }\n    } else {\n      diff = diff || {};\n      diff[aKey] = bValue;\n    }\n  }\n\n  for (var bKey in b) {\n    if (!(bKey in a)) {\n      diff = diff || {};\n      diff[bKey] = b[bKey];\n    }\n  }\n\n  return diff;\n}\n\nfunction getPrototype(value) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(value);\n  } else if (value.__proto__) {\n    return value.__proto__;\n  } else if (value.constructor) {\n    return value.constructor.prototype;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}