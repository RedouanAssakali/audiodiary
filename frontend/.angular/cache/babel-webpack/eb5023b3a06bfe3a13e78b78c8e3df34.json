{"ast":null,"code":"var version = require(\"./version\");\n\nvar isVNode = require(\"./is-vnode\");\n\nvar isWidget = require(\"./is-widget\");\n\nvar isThunk = require(\"./is-thunk\");\n\nvar isVHook = require(\"./is-vhook\");\n\nmodule.exports = VirtualNode;\nvar noProperties = {};\nvar noChildren = [];\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n  this.tagName = tagName;\n  this.properties = properties || noProperties;\n  this.children = children || noChildren;\n  this.key = key != null ? String(key) : undefined;\n  this.namespace = typeof namespace === \"string\" ? namespace : null;\n  var count = children && children.length || 0;\n  var descendants = 0;\n  var hasWidgets = false;\n  var hasThunks = false;\n  var descendantHooks = false;\n  var hooks;\n\n  for (var propName in properties) {\n    if (properties.hasOwnProperty(propName)) {\n      var property = properties[propName];\n\n      if (isVHook(property) && property.unhook) {\n        if (!hooks) {\n          hooks = {};\n        }\n\n        hooks[propName] = property;\n      }\n    }\n  }\n\n  for (var i = 0; i < count; i++) {\n    var child = children[i];\n\n    if (isVNode(child)) {\n      descendants += child.count || 0;\n\n      if (!hasWidgets && child.hasWidgets) {\n        hasWidgets = true;\n      }\n\n      if (!hasThunks && child.hasThunks) {\n        hasThunks = true;\n      }\n\n      if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n        descendantHooks = true;\n      }\n    } else if (!hasWidgets && isWidget(child)) {\n      if (typeof child.destroy === \"function\") {\n        hasWidgets = true;\n      }\n    } else if (!hasThunks && isThunk(child)) {\n      hasThunks = true;\n    }\n  }\n\n  this.count = count + descendants;\n  this.hasWidgets = hasWidgets;\n  this.hasThunks = hasThunks;\n  this.hooks = hooks;\n  this.descendantHooks = descendantHooks;\n}\n\nVirtualNode.prototype.version = version;\nVirtualNode.prototype.type = \"VirtualNode\";","map":null,"metadata":{},"sourceType":"script"}