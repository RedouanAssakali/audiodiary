{"ast":null,"code":"import { SingleComment } from \"../../../models/singleComment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/comments.service\";\nimport * as i2 from \"../../../services/auth.service\";\n\nfunction CommentsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-single-comment\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"postComment\", comment_r1);\n  }\n}\n\nexport let CommentsComponent = /*#__PURE__*/(() => {\n  class CommentsComponent {\n    constructor(commentService, auth) {\n      this.commentService = commentService;\n      this.auth = auth;\n    }\n\n    getComments() {\n      this.commentService.restFindCommentByPostId(this.postInfo.id).subscribe(data => {\n        // @ts-ignore\n        this.comments = data;\n        console.log(data);\n      }, error => console.log(\"Error: \" + error.status + \" - \" + error.error));\n    }\n\n    ngOnInit() {\n      this.getComments();\n    }\n\n    sendComment() {\n      console.log();\n      this.commentService.restPostComment(new SingleComment(null, this.postInfo, this.auth.getUser(), this.description)).subscribe(data => {\n        this.getComments();\n        this.description = null;\n        console.log(data);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n  }\n\n  CommentsComponent.ɵfac = function CommentsComponent_Factory(t) {\n    return new (t || CommentsComponent)(i0.ɵɵdirectiveInject(i1.CommentsService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  CommentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommentsComponent,\n    selectors: [[\"app-comments\"]],\n    inputs: {\n      postInfo: \"postInfo\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [3, \"postComment\"]],\n    template: function CommentsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CommentsComponent_div_0_Template, 2, 1, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Type a comment...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CommentsComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CommentsComponent_Template_button_click_5_listener() {\n          return ctx.sendComment();\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.description);\n      }\n    },\n    styles: [\".card[_ngcontent-%COMP%]{border-radius:35px;width:22rem;display:flex;flex:1 1 auto;margin:10px auto}.card-body[_ngcontent-%COMP%]{padding-top:4mm}app-comments[_ngcontent-%COMP%]{display:flex}  .mat-form-field-appearance-outline .mat-form-field-outline{background-color:#fff;border-radius:11px;margin:5px auto;flex:1 1 auto;display:flex}\"]\n  });\n  return CommentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}