{"ast":null,"code":"import { BaseTextSource } from \"./BaseTextSource.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.SubtitlesSource}\n * @description Defines how to manipulate a Subtitles layer\n */\n\nclass SubtitlesSource extends BaseTextSource {\n  constructor(fileName) {\n    super(fileName);\n    this.type = 'subtitles'; // used within TextSource for l/u_subtitles:\n  }\n  /**\n   * @description Set the textStyle for the subtitles layer\n   * @param {TextStyle} textStyle\n   */\n\n\n  textStyle(textStyle) {\n    this._textStyle = textStyle;\n    return this;\n  }\n  /**\n   *\n   * @description Used within getOpenSourceString of TextSource, this function overwrites the default encoding behaviour\n   * Subtitle file names require a different encoding than texts\n   * @param text\n   * @example\n   * encodeText('foo/bar'); // -> foo:bar\n   */\n\n\n  encodeText(text) {\n    return text.replace(/\\//g, ':');\n  }\n\n}\n\nexport { SubtitlesSource };","map":null,"metadata":{},"sourceType":"module"}