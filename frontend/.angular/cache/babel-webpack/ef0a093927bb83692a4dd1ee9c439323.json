{"ast":null,"code":"import Loader from \"./Loader\";\nexport default class extends Loader {\n  /*\n   * Loads an audio file via a FileReader\n   */\n  load() {\n    return new Promise((resolve, reject) => {\n      if (this.src.type.match(/audio.*/) || // added for problems with Firefox mime types + ogg.\n      this.src.type.match(/video\\/ogg/)) {\n        const fr = new FileReader();\n        fr.readAsArrayBuffer(this.src);\n        fr.addEventListener(\"progress\", e => {\n          super.fileProgress(e);\n        });\n        fr.addEventListener(\"load\", e => {\n          const decoderPromise = super.fileLoad(e);\n          decoderPromise.then(audioBuffer => {\n            resolve(audioBuffer);\n          }).catch(reject);\n        });\n        fr.addEventListener(\"error\", reject);\n      } else {\n        reject(Error(`Unsupported file type ${this.src.type}`));\n      }\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}