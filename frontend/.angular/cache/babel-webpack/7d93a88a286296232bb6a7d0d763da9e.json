{"ast":null,"code":"import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\n\nclass FetchLayer extends Layer {\n  /**\n   * @class FetchLayer\n   * @classdesc Creates an image layer using a remote URL.\n   * @param {Object|string} options - layer parameters or a url\n   * @param {string} options.url the url of the image to fetch\n   */\n  constructor(options) {\n    super(options);\n\n    if (isString(options)) {\n      this.options.url = options;\n    } else if (options != null ? options.url : void 0) {\n      this.options.url = options.url;\n    }\n  }\n\n  url(url) {\n    this.options.url = url;\n    return this;\n  }\n  /**\n   * generate the string representation of the layer\n   * @function FetchLayer#toString\n   * @return {String}\n   */\n\n\n  toString() {\n    return `fetch:${base64Encode(this.options.url)}`;\n  }\n\n}\n\nexport default FetchLayer;","map":null,"metadata":{},"sourceType":"module"}