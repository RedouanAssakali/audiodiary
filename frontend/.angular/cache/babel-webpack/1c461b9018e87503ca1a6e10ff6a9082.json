{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description Represents an embedded smart object in a Photoshop document.\n * </br><b>Learn more:</b> {@link https://cloudinary.com/documentation/paged_and_layered_media#extract_the_original_content_of_an_embedded_object|Extract the original content of an embedded Photoshop object}\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\n\nclass SmartObjectAction extends Action {\n  constructor() {\n    super();\n    this.qualifierValue = new QualifierValue();\n    this.useName = false;\n    this.qualifierValue.delimiter = ';';\n  }\n  /**\n   * @description Creates a new instance using the specified number.\n   * @param index The number.\n   */\n\n\n  byIndex(index) {\n    this.smartObjectValue = index;\n    this.qualifierValue.addValue(index);\n    return this;\n  }\n  /**\n   * @description Creates an instance using the name.\n   * @param {string} layerName The name of the layer\n   */\n\n\n  byLayerName(layerName) {\n    this.useName = true;\n    this.qualifierValue.addValue(layerName);\n    return this;\n  }\n\n  prepareQualifiers() {\n    let qualifierValue;\n\n    if (this.useName) {\n      qualifierValue = new QualifierValue(['embedded:name', this.qualifierValue]);\n    } else {\n      qualifierValue = new QualifierValue(['embedded', this.qualifierValue]);\n    }\n\n    this.addQualifier(new Qualifier('pg', qualifierValue));\n  }\n\n}\n\nexport { SmartObjectAction };","map":null,"metadata":{},"sourceType":"module"}