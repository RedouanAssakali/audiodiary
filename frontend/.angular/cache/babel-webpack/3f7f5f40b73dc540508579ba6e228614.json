{"ast":null,"code":"import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\n\nclass FocusOnGravity extends GravityQualifier {\n  constructor(FocusOnObjects) {\n    // Required due to https://github.com/microsoft/TypeScript/issues/13029\n\n    /* istanbul ignore next */\n    super(FocusOnObjects);\n  }\n  /**\n   * @description Specifies the gravity to use if none of the other gravity objects are found.\n   * @param {Qualifiers.Gravity.AutoGravity} val\n   */\n\n\n  fallbackGravity(val) {\n    /*\n     *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n     *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n     *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n     *  To solve it, we take only the value from the qualifier, instead of the whole thing\n     */\n    this.addValue(val.qualifierValue);\n    return this;\n  }\n\n}\n\nexport { FocusOnGravity };","map":null,"metadata":{},"sourceType":"module"}