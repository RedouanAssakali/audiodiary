{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Applies a cartoon effect to an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass CartoonifyEffect extends Action {\n  constructor(effectName, strength) {\n    // We don't pass level in the constructor, we'll build it in the prepareParam\n    super();\n    this._actionModel = {};\n    this.cartoonifyStrength = strength;\n    this.effectName = effectName;\n    this._actionModel.actionType = effectName;\n  }\n  /**\n   * @description Sets the thickness of the lines.\n   * @param {number} lineStrength The thickness of the lines. (Range: 0 to 100, Server default: 50)\n   * @return {this}\n   */\n\n\n  lineStrength(lineStrength) {\n    this.cartoonifyStrength = lineStrength;\n    this._actionModel.lineStrength = lineStrength;\n    return this;\n  }\n  /**\n   * @description Achieves a black and white cartoon effect.\n   * @return {this}\n   */\n\n\n  blackwhite() {\n    this._actionModel.blackAndWhite = true;\n    this.colorReduction = 'bw';\n    return this;\n  }\n  /**\n   * @description\n   * Sets the decrease in the number of colors and corresponding saturation boost of the remaining colors. <br/>\n   * Higher reduction values result in a less realistic look.\n   * @param {number } level The decrease in the number of colors and corresponding saturation boost of the remaining colors. (Range: 0 to 100, Server default: automatically adjusts according to the line_strength value). Set to 'bw' for a black and white cartoon effect.\n   * @return {this}\n   */\n\n\n  colorReductionLevel(level) {\n    this._actionModel.colorReductionLevel = level;\n    this.colorReduction = level;\n    return this;\n  }\n\n  prepareQualifiers() {\n    this.addQualifier(new Qualifier('e', new QualifierValue([this.effectName, this.cartoonifyStrength, this.colorReduction])));\n    return;\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      lineStrength,\n      blackAndWhite,\n      colorReductionLevel\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this(actionType, lineStrength);\n    blackAndWhite && result.blackwhite();\n    colorReductionLevel && result.colorReductionLevel(colorReductionLevel);\n    lineStrength && result.lineStrength(lineStrength);\n    return result;\n  }\n\n}\n\nexport { CartoonifyEffect };","map":null,"metadata":{},"sourceType":"module"}