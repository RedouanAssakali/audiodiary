{"ast":null,"code":"import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\nimport { Transformation } from \"../transformation/Transformation.js\";\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\n/**\n * @desc Cloudinary media asset, with all possible transformations\n * @summary SDK\n * @memberOf SDK\n */\n\nclass CloudinaryMedia extends CloudinaryTransformable {\n  constructor(publicID, cloudConfig, urlConfig) {\n    /* istanbul ignore next */\n    super(publicID, cloudConfig, urlConfig, new Transformation());\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.Transcode} action\n   * @return {this}\n   */\n\n\n  transcode(action) {\n    this.transformation.transcode(action);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @param {Actions.VideoEdit} action\n   * @return {this}\n   */\n\n\n  videoEdit(action) {\n    this.transformation.videoEdit(action);\n    return this;\n  }\n  /**\n   * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n   * @return {this}\n   */\n\n\n  underlay(underlayAction) {\n    this.transformation.underlay(underlayAction);\n    return this;\n  }\n\n  clone() {\n    return cloneDeep(this);\n  }\n\n}\n\nexport { CloudinaryMedia };","map":null,"metadata":{},"sourceType":"module"}