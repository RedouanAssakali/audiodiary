{"ast":null,"code":"/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\n\nclass ProgressiveQualifier extends FlagQualifier {\n  constructor(mode) {\n    super('progressive', mode);\n  }\n\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\n\n\nfunction none() {\n  return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\n\n\nfunction semi() {\n  return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\n\n\nfunction steep() {\n  return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\n\n\nfunction progressive() {\n  return new ProgressiveQualifier();\n}\n\nconst Progressive = {\n  semi,\n  none,\n  steep,\n  progressive,\n  ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };","map":null,"metadata":{},"sourceType":"module"}