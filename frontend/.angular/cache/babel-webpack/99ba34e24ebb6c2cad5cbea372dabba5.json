{"ast":null,"code":"/**\n *\n * @private\n * @param {any} a\n */\nfunction isObject(a) {\n  if (typeof a !== 'object' || a instanceof Array) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nclass Config {\n  filterOutNonSupportedKeys(userProvidedConfig, validKeys) {\n    const obj = Object.create({});\n\n    if (isObject(userProvidedConfig)) {\n      Object.keys(userProvidedConfig).forEach(key => {\n        if (validKeys.indexOf(key) >= 0) {\n          obj[key] = userProvidedConfig[key];\n        } else {\n          console.warn('Warning - unsupported key provided to configuration: ', key);\n        }\n      });\n      return obj;\n    } else {\n      return Object.create({});\n    }\n  }\n\n}\n\nexport default Config;","map":null,"metadata":{},"sourceType":"module"}